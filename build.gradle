plugins {
	id "fabric-loom" version "0.12-SNAPSHOT"
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17
//C:\Program Files\Java\jre1.8.0_333\bin
archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group
var moduleName = "fabric"
loom {
	accessWidenerPath = file("src/main/resources/hydrogenhack.accesswidener")
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		url "https://jitpack.io"
		url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1"
		}
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
	maven {
		name = "modrinth"
		url = "https://api.modrinth.com/maven"

		content {
			includeGroup "maven.modrinth"
		}
	}
	flatDir {
		dirs 'libs'
	}
	mavenCentral()
}
project.ext.jomlVersion = "1.10.5"
configurations {
	// include mods
	modImplementation.extendsFrom(modInclude)
	include.extendsFrom(modInclude)

	// include libraries
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "baritone-api-fabric:baritone-fabric-api:1.5.3-613"
	//baritone-fabric-api-1.5.3-613.jar
	//modInclude "baritone:fabric:${project.minecraft_version}-SNAPSHOT"
	//include(modImplementation("baritone:fabric:${project.minecraft_version}-SNAPSHOT"))
	modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:1.1.0")
	include(modImplementation("com.github.fzakaria:ascii85:1.2"))
	implementation "org.joml:joml:${jomlVersion}"

	// include(modImplementation("com.github.BleachDrinker420:DiscordIPC:9957fc8114")) {
    //    exclude group: 'com.google.code.gson', module: 'gson'
	// }
	// include(modImplementation("com.kohlschutter.junixsocket:junixsocket-common:2.2.1"))
	// include(modImplementation("com.kohlschutter.junixsocket:junixsocket-native-common:2.2.1"))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from("LICENSE") {
		rename { "${it}-${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

